events {
    worker_connections  1024; # 增加 worker 连接数
}

http {
    # 日志配置
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    server {
        listen 80;
        server_name yandaifu.xyz www.yandaifu.xyz;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # 强制重定向 HTTP 到 HTTPS
        location / {
            return 301 https://$host$request_uri;
        }

        # 错误处理
        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
        }
    }

    server {
        listen 443 ssl;
        server_name yandaifu.xyz www.yandaifu.xyz;

        ssl_certificate /etc/letsencrypt/www.yandaifu.xyz.pem;
        ssl_certificate_key /etc/letsencrypt/www.yandaifu.xyz.key;
        ssl_session_cache shared:SSL:10m; # 增大 SSL 会话缓存大小
        ssl_session_timeout 5m;
        ssl_protocols TLSv1.2 TLSv1.3; # 只使用较新的 SSL 协议
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
        ssl_prefer_server_ciphers on;

        # 安全头
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options nosniff;

        # 代理到前端
        location / {
            proxy_pass http://clinic-frontend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # 新增的 location 块，用于代理 /h5/ 开头的路由
        location /h5/ {
            proxy_pass http://clinic-frontend-h5/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # 代理 API 请求到 NestJS，并允许跨域
        location /api/ {
            proxy_pass http://clinic-app:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # 添加 CORS 允许跨域
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';

            # 处理 OPTIONS 预检请求
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }

        # 错误处理
        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
        }
    }
}
